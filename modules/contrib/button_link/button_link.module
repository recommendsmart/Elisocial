<?php

/**
 * @file
 * Defines simple link field types.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Link;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_help().
 */
function button_link_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the button_link module.
    case 'help.page.button_link':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This modules adds a link formatter that transform a link field output in
      a "button like" Bootstrap anchor.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function button_link_theme() {
  return [
    'link_formatter_button_link' => [
      'variables' => [
        'title' => NULL, 
        'url_title' => NULL, 
        'url' => NULL, 
        'type' => NULL, 
        'size' => NULL,
        'block' => NULL,
        'additional_class' => NULL,
        'icon_class' => NULL],
    ],
  ];
}

/**
 * Prepares variables for button link field templates.
 *
 * This template outputs a separate title and link.
 *
 * Default template: link-formatter-button-link.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - title: (optional) A descriptive or alternate title for the link, which
 *     may be different than the actual link text.
 *   - url_title: The anchor text for the link.
 *   - url: A \Drupal\Core\Url object.
 */
function template_preprocess_link_formatter_button_link(&$variables) {
  $url = $variables['url'];
  $attributes = $url->getOption('attributes');
  if (isset($variables['disable_btn_role']) && !$variables['disable_btn_role']) {
    $attributes['role'] = 'button';
  }
  $attributes['class'][] = 'btn';
  $attributes['class'][] = $variables['type'];
  $attributes['class'][] = $variables['size'];
  $attributes['class'][] = $variables['block'];
  $attributes['class'][] = $variables['additional_class'];
  
  $attributes['href'] = $url->toString();
  $url->setOption('attributes', $attributes);
  $variables['link'] = Link::fromTextAndUrl($variables['title'], $url )->toString();
  $variables['attributes'] = new Attribute($attributes);
  $icon_attributes['class'][] = $variables['icon_class'];
  $variables['icon_attributes'] = new Attribute($icon_attributes);
}
